<?php

/**
 * Cafe Francois
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * Contact: maulit@gmail.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


namespace App\Http\Controllers;

use Illuminate\Support\Facades\Request;

class ItemApi extends Controller
{
    /**
     * Constructor
     */
    public function __construct()
    {
    }

    /**
     * Operation createItem
     *
     * Create an item.
     *
     *
     * @return Http response
     */
    public function createItem()
    {
        $input = Request::all();

        //path params validation


        //not path params validation
        if (!isset($input['body'])) {
            throw new \InvalidArgumentException('Missing the required parameter $body when calling createItem');
        }
        $body = $input['body'];


        return response('How about implementing createItem as a POST method ?');
    }
    /**
     * Operation updateItem
     *
     * Update an existing item.
     *
     *
     * @return Http response
     */
    public function updateItem()
    {
        $input = Request::all();

        //path params validation


        //not path params validation
        if (!isset($input['body'])) {
            throw new \InvalidArgumentException('Missing the required parameter $body when calling updateItem');
        }
        $body = $input['body'];


        return response('How about implementing updateItem as a PUT method ?');
    }
    /**
     * Operation deleteItem
     *
     * Deletes an Item.
     *
     * @param int $item_id Item id to delete (required)
     *
     * @return Http response
     */
    public function deleteItem($item_id)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing deleteItem as a DELETE method ?');
    }
    /**
     * Operation getItemById
     *
     * Find item by ID.
     *
     * @param int $item_id ID of item to return (required)
     *
     * @return Http response
     */
    public function getItemById($item_id)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing getItemById as a GET method ?');
    }
    /**
     * Operation updateItemWithForm
     *
     * Updates an item in the store with form data.
     *
     * @param int $item_id ID of item that needs to be updated (required)
     *
     * @return Http response
     */
    public function updateItemWithForm($item_id)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing updateItemWithForm as a PUT method ?');
    }
}
